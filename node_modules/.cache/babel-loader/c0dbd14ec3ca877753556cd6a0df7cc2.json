{"ast":null,"code":"var _jsxFileName = \"/Users/nazargavucak/Desktop/kuna-test/src/hooks/use-viewport.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultComponents = {};\nconst ViewportContext = /*#__PURE__*/createContext(defaultComponents);\nconst ViewportProvider = _ref => {\n  let {\n    children,\n    breakpoints\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(ViewportContext.Provider, {\n    value: breakpoints,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 113\n  }, this);\n};\n_c = ViewportProvider;\nconst useViewport = () => {\n  _s();\n  const breakpoints = useContext(ViewportContext);\n  console.log(breakpoints);\n  const lessThan = query => {\n    console.log('1', query);\n  };\n  const greaterThan = query => {\n    console.log('2', query);\n  };\n  const betweenBreakpoints = (startPosition, endPosition) => {\n    console.log('3', startPosition, endPosition);\n  };\n  return {\n    lessThan,\n    greaterThan,\n    betweenBreakpoints\n  };\n};\n_s(useViewport, \"ORAyh3w2WwF/52r7FuqZhB6RO74=\");\nexport { useViewport, ViewportProvider };\nvar _c;\n$RefreshReg$(_c, \"ViewportProvider\");","map":{"version":3,"names":["createContext","useContext","defaultComponents","ViewportContext","ViewportProvider","children","breakpoints","useViewport","console","log","lessThan","query","greaterThan","betweenBreakpoints","startPosition","endPosition"],"sources":["/Users/nazargavucak/Desktop/kuna-test/src/hooks/use-viewport.tsx"],"sourcesContent":["import {createContext, FC, PropsWithChildren, useContext} from \"react\";\n\ntype BreakPointsType = Record<string, number>;\n\nconst defaultComponents: BreakPointsType = {\n\n};\n\nconst ViewportContext = createContext(defaultComponents);\n\nconst ViewportProvider: FC<PropsWithChildren & { breakpoints: BreakPointsType }> = ({children, breakpoints}) => <ViewportContext.Provider value={breakpoints}>{children}</ViewportContext.Provider>\n\nconst useViewport = () => {\n    const breakpoints = useContext(ViewportContext);\n\n    console.log(breakpoints);\n\n\n    const lessThan = (query: string) => {console.log('1', query)};\n\n    const greaterThan = (query: string) => {console.log('2', query)};\n\n    const betweenBreakpoints = (startPosition: string, endPosition: string) => {\n        console.log('3', startPosition, endPosition)\n    };\n\n    return {\n        lessThan,\n\n        greaterThan,\n\n        betweenBreakpoints\n    }\n};\n\nexport { useViewport, ViewportProvider }"],"mappings":";;AAAA,SAAQA,aAAa,EAAyBC,UAAU,QAAO,OAAO;AAAC;AAIvE,MAAMC,iBAAkC,GAAG,CAE3C,CAAC;AAED,MAAMC,eAAe,gBAAGH,aAAa,CAACE,iBAAiB,CAAC;AAExD,MAAME,gBAA0E,GAAG;EAAA,IAAC;IAACC,QAAQ;IAAEC;EAAW,CAAC;EAAA,oBAAK,QAAC,eAAe,CAAC,QAAQ;IAAC,KAAK,EAAEA,WAAY;IAAA,UAAED;EAAQ;IAAA;IAAA;IAAA;EAAA,QAA4B;AAAA;AAAA,KAA7LD,gBAA0E;AAEhF,MAAMG,WAAW,GAAG,MAAM;EAAA;EACtB,MAAMD,WAAW,GAAGL,UAAU,CAACE,eAAe,CAAC;EAE/CK,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;EAGxB,MAAMI,QAAQ,GAAIC,KAAa,IAAK;IAACH,OAAO,CAACC,GAAG,CAAC,GAAG,EAAEE,KAAK,CAAC;EAAA,CAAC;EAE7D,MAAMC,WAAW,GAAID,KAAa,IAAK;IAACH,OAAO,CAACC,GAAG,CAAC,GAAG,EAAEE,KAAK,CAAC;EAAA,CAAC;EAEhE,MAAME,kBAAkB,GAAG,CAACC,aAAqB,EAAEC,WAAmB,KAAK;IACvEP,OAAO,CAACC,GAAG,CAAC,GAAG,EAAEK,aAAa,EAAEC,WAAW,CAAC;EAChD,CAAC;EAED,OAAO;IACHL,QAAQ;IAERE,WAAW;IAEXC;EACJ,CAAC;AACL,CAAC;AAAC,GArBIN,WAAW;AAuBjB,SAASA,WAAW,EAAEH,gBAAgB;AAAE;AAAA"},"metadata":{},"sourceType":"module"}